#include <glib.h>
//#include <glib-object.h>
#include <axsdk/axevent.h>
#include <syslog.h>
void sub_callback(guint subs, AXEvent *evt, guint *token);
guint set_up_ax_event_subscription(AXEventHandler *evt_handler, guint token);

/* Callback for the motion event triggered each time there 
 * are some changes in the motion state
 */
void sub_callback(guint subs, AXEvent *evt, guint *token){
	const AXEventKeyValueSet *k_v_set;
	//gint port;
	gboolean state;

	(void)subs;

	//Extracting the key value set from event
	k_v_set = ax_event_get_key_value_set(evt);

	//Manual trigger port
	//ax_event_key_value_set_get_integer(k_v_set,"port",NULL,&port,NULL);

	//State of the manual trigger port
	ax_event_key_value_set_get_boolean(k_v_set,"state",NULL,&state,NULL);

	char *msg =  state ? "Triggered high" : "Triggered low";

	syslog(LOG_INFO,"Motion: %s \n", msg);

	//syslog(LOG_INFO,"The token %d \n", *token);
}

/*Method for setting up the Motion detection event and bind to a subscription*/
guint set_up_ax_event_subscription(AXEventHandler *evt_handler, guint token){
	AXEventKeyValueSet *k_v_set;
	guint subs;

	k_v_set = ax_event_key_value_set_new();

	/* Init AXEvent which matches the manual trigger event
	 * 	
	 * tns1 --> topic 0, Rule
	 * tnsaxis --> topic 1, Motion detection
	 * subscribes to all states (active)
	 */
	ax_event_key_value_set_add_key_values(k_v_set, NULL, 
		"topic0", "tns1", "RuleEngine", AX_VALUE_TYPE_STRING, 
		"topic1", "tnsaxis", "VMD3", AX_VALUE_TYPE_STRING, 
		"active", NULL, NULL, AX_VALUE_TYPE_BOOL, NULL);

	//Subscribing to the motion event and assigning the callback to be called
	ax_event_handler_subscribe(evt_handler, k_v_set, &subs, (AXSubscriptionCallback)sub_callback, token, NULL);

	//Free resources for key value set
	ax_event_key_value_set_free(k_v_set);

	return subs;
}

/*void write_to_file(char msg){
	gchar *log = g_strdup("file1");
	g_timeout_add(1000, (GSourceFunc) write_data, log);
	
}*/



int main(void){
	GMainLoop *m_loop;
  	openlog("Motion_logger", LOG_PID, LOG_LOCAL4);
  	syslog(LOG_INFO, "Starting motion app");
	AXEventHandler *evt_handler;
	m_loop = g_main_loop_new(NULL, FALSE);
	guint token = 1111;

	evt_handler = ax_event_handler_new();

	guint subs = set_up_ax_event_subscription(evt_handler, &token);
	g_main_loop_run(m_loop);
	
	(void)subs;
	ax_event_handler_free(evt_handler);

	return 0;
}
